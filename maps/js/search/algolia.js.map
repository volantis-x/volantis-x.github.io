{"version":3,"file":"../../../js/search/algolia.js","names":["SearchService","fn","search","algolia","timerId","queryText","template","init","div","document","createElement","innerHTML","body","append","volantis","GLOBAL_CONFIG","appId","apiKey","indexName","event","setAlgolia","querySelector","style","textAlign","maxHeight","addEventListener","close","querySelectorAll","forEach","e","onSubmit","input","target","value","instantsearch","searchClient","algoliasearch","searchFunction","helper","state","query","configure","widgets","hitsPerPage","searchBox","container","autofocus","showReset","showSubmit","showLoadingIndicator","searchAsYouType","placeholder","templates","queryHook","refine","clearTimeout","setTimeout","hits","item","data","keyword","link","permalink","root","path","result","_highlightResult","content","contentStripTruncate","cutContent","contentStrip","title","empty","languages","hits_empty","replace","stats","text","hits_stats","nbHits","processingTimeMS","powerBy","poweredBy","theme","dark","mode","pagination","totalPages","first","last","previous","next","addWidgets","start","setQueryText","setUiState","display","code","once","preventDefault","firstOccur","indexOf","end","pre","post","length","substring","matchContent","Object","freeze"],"sources":["js/search/algolia.js"],"mappings":"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","ignoreList":[],"sourcesContent":["let SearchService = (() => {\n  const fn = {};\n  let search, algolia, timerId; \n  fn.queryText = null;\n  fn.template = `<div id=\"u-search\">\n  <div class=\"modal\">\n    <header class=\"modal-header\" class=\"clearfix\">\n      <button type=\"submit\" id=\"u-search-modal-btn-submit\" class=\"u-search-btn-submit\">\n        <span class=\"fa-solid fa-search\"></span>\n      </button>\n      <div id=\"algolia-search-input\"></div>\n      <a id=\"u-search-btn-close\" class=\"btn-close\"> <span class=\"fa-solid fa-times\"></span> </a>\n    </header>\n    <main class=\"modal-body\">\n      <div id=\"algolia-search-results\">\n        <div id=\"algolia-hits\">\n          <div class=\"search-icon\"><i class=\"fa-sharp fa-solid fa-telescope\"></i></i></div>\n        </div>\n      </div>\n    </main>\n    <footer>\n      <div id=\"algolia-pagination\"></div>\n      <hr>\n      <div id=\"algolia-info\">\n        <div class=\"algolia-stats\"></div>\n        <div class=\"algolia-poweredBy\"></div>\n      </div>\n    </footer>\n  </div>\n  <div id=\"modal-overlay\" class=\"modal-overlay\"></div>\n  </div>\n  `;\n\n  fn.init = () => {\n    let div = document.createElement(\"div\");\n    div.innerHTML += fn.template;\n    document.body.append(div);\n\n    algolia = volantis.GLOBAL_CONFIG.search;\n    if (algolia.appId && algolia.apiKey && algolia.indexName) {\n      fn.event();\n      fn.setAlgolia();\n    } else {\n      document.querySelector('#u-search main.modal-body').innerHTML = 'Algolia setting is invalid!';\n      document.querySelector('#u-search main.modal-body').style.textAlign = 'center';\n      document.querySelector('#u-search .modal').style.maxHeight = '128px';\n    }\n  }\n\n  fn.event = () => {\n    document\n      .querySelector(\"#u-search-btn-close\")\n      .addEventListener(\"click\", fn.close, false);\n    document\n      .querySelector(\"#modal-overlay\")\n      .addEventListener(\"click\", fn.close, false);\n    document.querySelectorAll(\".u-search-form\").forEach((e) => {\n      e.addEventListener(\"submit\", fn.onSubmit, false);\n    });\n    document.querySelector(\"#algolia-search-input\").addEventListener(\"input\", event => {\n      let input = event.target.querySelector(\".ais-SearchBox-input\");\n      if (input) {\n        fn.queryText = input.value;\n      } else {\n        fn.queryText = event.target.value;\n      }\n    })\n  }\n\n  fn.setAlgolia = () => {\n    search = instantsearch({\n      indexName: algolia.indexName,\n      searchClient: algoliasearch(algolia.appId, algolia.apiKey),\n      searchFunction(helper) {\n        helper.state.query && helper.search()\n      },\n    })\n\n    const configure = instantsearch.widgets.configure({\n      hitsPerPage: algolia.hitsPerPage\n    })\n\n    const searchBox = instantsearch.widgets.searchBox({\n      container: '#algolia-search-input',\n      autofocus: true,\n      showReset: false,\n      showSubmit: false,\n      showLoadingIndicator: false,\n      searchAsYouType: algolia.searchAsYouType,\n      placeholder: algolia.placeholder,\n      templates: {\n        input: 'algolia-input'\n      },\n      queryHook(query, refine) {\n        clearTimeout(timerId)\n        timerId = setTimeout(() => refine(query), 500)\n      }\n    })\n\n    const hits = instantsearch.widgets.hits({\n      container: '#algolia-hits',\n      templates: {\n        item(data) {\n          const keyword = !!fn.queryText ? `?keyword=${fn.queryText}` : ''\n          const link = data.permalink ? data.permalink : `${volantis.GLOBAL_CONFIG.root}${data.path}`\n          const result = data._highlightResult\n          const content = result.contentStripTruncate\n            ? fn.cutContent(result.contentStripTruncate.value)\n            : result.contentStrip\n              ? fn.cutContent(result.contentStrip.value)\n              : result.content\n                ? fn.cutContent(result.content.value)\n                : ''\n          return `\n            <a href=\"${link}${keyword}\" class=\"result\">\n            <span class=\"title\">${result.title.value || 'no-title'}</span>\n            <span class=\"digest\">${content}</span>\n            </a>`\n        },\n        empty: function (data) {\n          return (\n            `<div id=\"resule-hits-empty\"><i class=\"fa-solid fa-box-open\"></i><p>${volantis.GLOBAL_CONFIG.languages.search.hits_empty.replace(/\\$\\{query}/, data.query)}</p></div>`\n          )\n        }\n      }\n    })\n\n    const stats = instantsearch.widgets.stats({\n      container: '#algolia-info > .algolia-stats',\n      templates: {\n        text: function (data) {\n          const stats = volantis.GLOBAL_CONFIG.languages.search.hits_stats\n            .replace(/\\$\\{hits}/, data.nbHits)\n            .replace(/\\$\\{time}/, data.processingTimeMS)\n          return (\n            `${stats}`\n          )\n        }\n      }\n    })\n\n    const powerBy = instantsearch.widgets.poweredBy({\n      container: '#algolia-info > .algolia-poweredBy',\n      theme: volantis.dark?.mode === 'dark' ? 'dark' : 'light'\n    })\n\n    const pagination = instantsearch.widgets.pagination({\n      container: '#algolia-pagination',\n      totalPages: 5,\n      templates: {\n        first: '<i class=\"fas fa-angle-double-left\"></i>',\n        last: '<i class=\"fas fa-angle-double-right\"></i>',\n        previous: '<i class=\"fas fa-angle-left\"></i>',\n        next: '<i class=\"fas fa-angle-right\"></i>'\n      }\n    })\n\n    search.addWidgets([configure, searchBox, hits, stats, powerBy, pagination])\n\n    search.start()\n\n  }\n\n  fn.setQueryText = queryText => {\n    fn.queryText = queryText;\n    if (!search) {\n      fn.init()\n    }\n    search?.setUiState({\n      [algolia.indexName]: {\n        query: queryText\n      }\n    })\n  }\n\n  fn.search = () => {\n    document.querySelector(\"#u-search\").style.display = \"block\";\n    document.addEventListener(\"keydown\", event => {\n      if (event.code === \"Escape\") {\n        fn.close();\n      }\n    }, { once: true })\n  }\n\n  fn.onSubmit = (event) => {\n    event.preventDefault();\n    let input = event.target.querySelector(\".u-search-input\");\n    fn.setQueryText(input?.value ? input.value : event.target.value)\n    fn.search();\n  };\n\n  fn.cutContent = content => {\n    if (content === '') return ''\n\n    const firstOccur = content.indexOf('<mark>')\n\n    let start = firstOccur - 30\n    let end = firstOccur + 120\n    let pre = ''\n    let post = ''\n\n    if (start <= 0) {\n      start = 0\n      end = 140\n    } else {\n      pre = '...'\n    }\n\n    if (end > content.length) {\n      end = content.length\n    } else {\n      post = '...'\n    }\n\n    let matchContent = pre + content.substring(start, end) + post\n    return matchContent\n  }\n\n  fn.close = () => {\n    document.querySelector(\"#u-search\").style.display = \"none\";\n  };\n\n  return {\n    init: fn.init,\n    setQueryText: queryText => {\n      fn.setQueryText(queryText);\n    },\n    search: fn.search,\n    close: fn.close\n  }\n})()\n\nObject.freeze(SearchService);\n\nSearchService.init();\n"]}